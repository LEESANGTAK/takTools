{
    "shelfButtonInfos": [
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.pipe...)\ntak_shotSetUp.UI()", 
            "command": "import takTools.pipeline.tak_shotSetUp as tak_shotSetUp\nimport imp\nimp.reload(tak_shotSetUp)\ntak_shotSetUp.UI()", 
            "image1": "setPref.bmp", 
            "annotation": "Set maya preference."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "OpenContentBrowser...OpenContentBrowser", 
            "command": "OpenContentBrowser", 
            "image1": "teContentBrowser.png", 
            "annotation": "Content Browser"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.comm...)\ntak_misc.openCWD()", 
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.openCWD()", 
            "image1": "fileOpen.png", 
            "annotation": "Open with current working directory."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.comm...)\ntak_misc.saveCWD()", 
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.saveCWD()", 
            "image1": "fileSave.png", 
            "annotation": "Save as in current working directory."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "ReferenceEditor...ReferenceEditor", 
            "command": "ReferenceEditor", 
            "image1": "out_reference.png", 
            "annotation": "Edit the references for the current scene"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "SelectHierarchy...SelectHierarchy", 
            "command": "SelectHierarchy", 
            "image1": "menuIconEdit.png", 
            "annotation": "Select all the children of the current selection"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "FreezeTransformation...reezeTransformations", 
            "command": "FreezeTransformations", 
            "image1": "menuIconModify.png", 
            "annotation": "Freeze Transformations"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "CenterPivot...CenterPivot", 
            "command": "CenterPivot", 
            "image1": "menuIconModify.png", 
            "annotation": "Center Pivot"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "NamespaceEditor...NamespaceEditor", 
            "command": "NamespaceEditor", 
            "image1": "namespaceEditor.png", 
            "annotation": "Namespace Editor"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "ComponentEditor...ComponentEditor", 
            "command": "ComponentEditor", 
            "image1": "menuIconWindow.png", 
            "annotation": "Component Editor"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "TextureViewWindow...TextureViewWindow", 
            "command": "TextureViewWindow", 
            "image1": "UVEditorUV.png", 
            "annotation": "UV Texture Editor"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "HypershadeWindow...HypershadeWindow", 
            "command": "HypershadeWindow", 
            "image1": "hypershade.png", 
            "annotation": "Display and edit connections in shading networks"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "NodeEditorWindow...NodeEditorWindow", 
            "command": "NodeEditorWindow", 
            "image1": "nodeGrapherRemoveNodes.png", 
            "annotation": "Display relationships among nodes in your scene graphically"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "ConnectionEditor...ConnectionEditor", 
            "command": "ConnectionEditor", 
            "image1": "mergeConnections.png", 
            "annotation": "Make connections between object attributes"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "ExpressionEditor...ExpressionEditor", 
            "command": "ExpressionEditor", 
            "image1": "out_expression.png", 
            "annotation": "Expression Editor"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "GraphEditor...GraphEditor", 
            "command": "GraphEditor", 
            "image1": "out_animCurveTA.png", 
            "annotation": "Edit animation curves"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "{\n    string $select...        \n    }    \n}", 
            "command": "{\n    string $selection[] = `ls -sl`;  \n    \n    for ($cur in $selection){\n        \n        int $result[] = `displaySurface -q -x $cur `;\n        if ( $result[0] )\n            displaySurface -x 0 $cur ;\n        else\n            displaySurface -x 1 $cur ;\n            \n    }    \n}", 
            "image1": "xRay.bmp", 
            "annotation": "Toggle x-ray mode for selection."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.comm...isc)\ntak_misc.Wire()", 
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.Wire()", 
            "image1": "UVTBWireFrame.png", 
            "annotation": "Toggle wire mode for selection."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.mode...reset.MatPreset.ui()", 
            "command": "import takTools.modeling.tak_matPreset as tak_matPreset\nimport imp\nimp.reload(tak_matPreset)\ntak_matPreset.MatPreset.ui()", 
            "image1": "hypershade.png", 
            "annotation": "import takTools.mode...reset.MatPreset.ui()"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "from takTools.common...c.setShapeColorRGB()", 
            "command": "from takTools.common import tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.setShapeColorRGB()", 
            "image1": "colorPresetSpectrum.png", 
            "annotation": "from takTools.common...c.setShapeColorRGB()"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.comm...misc.setJntColorUI()", 
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.setJntColorUI()", 
            "image1": "hairPaintSpecular.png", 
            "annotation": "import takTools.comm...misc.setJntColorUI()"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.comm...load(tc)\ntc.showUI()", 
            "command": "import takTools.common.tak_outlinerColor as tc\nimport imp\nimp.reload(tc)\ntc.showUI()", 
            "image1": "hairPaintSpecular.png", 
            "annotation": "Set ouliner color"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.comm...\ntak_misc.sortOutl()", 
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.sortOutl()", 
            "image1": "sortName.png", 
            "annotation": "Sorting selected items in outliner."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "from takRenamer impo...(main);main.showUI()", 
            "command": "from takRenamer import main;import imp;imp.reload(main);main.showUI()", 
            "image1": "quickRename.png", 
            "annotation": "Renamer"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.mode...ak_cleanUpModel.UI()", 
            "command": "import takTools.modeling.tak_cleanUpModel as tak_cleanUpModel\nimport imp\nimp.reload(tak_cleanUpModel)\ntak_cleanUpModel.UI()", 
            "image1": "cleanUpMesh.bmp", 
            "annotation": "Delete construction history, unlock normal, unlock attr, delete intermediate shapes, freeze transform"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "from imp import relo...erGUI()\nsmGUI.show()", 
            "command": "from imp import reload; import setManager as sm; reload(sm)\nsmGUI = sm.gui.ManagerGUI()\nsmGUI.show()", 
            "image1": "objectSet.svg", 
            "annotation": "Set Manager"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "from takTools.utils ...ptEditorHorizontal()", 
            "command": "from takTools.utils import qtUtil;qtUtil.editScriptEditorHorizontal()", 
            "image1": "defaultTwoSideBySideLayout.png", 
            "annotation": "Layout script editor horizontally"
        }
    ]
}