{
    "shelfButtonInfos": [
        {
            "label": "Shot Setup",
            "annotation": "Set maya preference.",
            "image1": "setPref.bmp",
            "imageOverlayLabel": "",
            "command": "import takTools.pipeline.tak_shotSetUp as tak_shotSetUp\nimport imp\nimp.reload(tak_shotSetUp)\ntak_shotSetUp.UI()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "OpenContentBrowser...OpenContentBrowser",
            "annotation": "Content Browser",
            "image1": "teContentBrowser.png",
            "imageOverlayLabel": "",
            "command": "OpenContentBrowser",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "import takTools.comm...)\ntak_misc.openCWD()",
            "annotation": "Open with current working directory.",
            "image1": "fileOpen.png",
            "imageOverlayLabel": "",
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.openCWD()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "import takTools.comm...)\ntak_misc.saveCWD()",
            "annotation": "Save as in current working directory.",
            "image1": "fileSave.png",
            "imageOverlayLabel": "",
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.saveCWD()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "ReferenceEditor...ReferenceEditor",
            "annotation": "Edit the references for the current scene",
            "image1": "out_reference.png",
            "imageOverlayLabel": "",
            "command": "ReferenceEditor",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "SelectHierarchy...SelectHierarchy",
            "annotation": "Select all the children of the current selection",
            "image1": "menuIconEdit.png",
            "imageOverlayLabel": "SH",
            "command": "SelectHierarchy",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "FreezeTransformation...reezeTransformations",
            "annotation": "Freeze Transformations",
            "image1": "menuIconModify.png",
            "imageOverlayLabel": "FT",
            "command": "FreezeTransformations",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "CenterPivot...CenterPivot",
            "annotation": "Center Pivot",
            "image1": "menuIconModify.png",
            "imageOverlayLabel": "CP",
            "command": "CenterPivot",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "NamespaceEditor...NamespaceEditor",
            "annotation": "Namespace Editor",
            "image1": "namespaceEditor.png",
            "imageOverlayLabel": "",
            "command": "NamespaceEditor",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "ComponentEditor...ComponentEditor",
            "annotation": "Component Editor",
            "image1": "menuIconWindow.png",
            "imageOverlayLabel": "CE",
            "command": "ComponentEditor",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "TextureViewWindow...TextureViewWindow",
            "annotation": "UV Texture Editor",
            "image1": "UVEditorUV.png",
            "imageOverlayLabel": "",
            "command": "TextureViewWindow",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "HypershadeWindow...HypershadeWindow",
            "annotation": "Display and edit connections in shading networks",
            "image1": "hypershade.png",
            "imageOverlayLabel": "",
            "command": "HypershadeWindow",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "NodeEditorWindow...NodeEditorWindow",
            "annotation": "Display relationships among nodes in your scene graphically",
            "image1": "nodeGrapherRemoveNodes.png",
            "imageOverlayLabel": "",
            "command": "NodeEditorWindow",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "ConnectionEditor...ConnectionEditor",
            "annotation": "Make connections between object attributes",
            "image1": "mergeConnections.png",
            "imageOverlayLabel": "",
            "command": "ConnectionEditor",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "ExpressionEditor...ExpressionEditor",
            "annotation": "Expression Editor",
            "image1": "out_expression.png",
            "imageOverlayLabel": "",
            "command": "ExpressionEditor",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "GraphEditor...GraphEditor",
            "annotation": "Edit animation curves",
            "image1": "out_animCurveTA.png",
            "imageOverlayLabel": "",
            "command": "GraphEditor",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "{\n    string $select...        \n    }    \n}",
            "annotation": "Toggle x-ray mode for selection.",
            "image1": "xRay.bmp",
            "imageOverlayLabel": "",
            "command": "{\n    string $selection[] = `ls -sl`;  \n    \n    for ($cur in $selection){\n        \n        int $result[] = `displaySurface -q -x $cur `;\n        if ( $result[0] )\n            displaySurface -x 0 $cur ;\n        else\n            displaySurface -x 1 $cur ;\n            \n    }    \n}",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "import takTools.comm...isc)\ntak_misc.Wire()",
            "annotation": "Toggle wire mode for selection.",
            "image1": "UVTBWireFrame.png",
            "imageOverlayLabel": "",
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.Wire()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "import takTools.mode...reset.MatPreset.ui()",
            "annotation": "import takTools.mode...reset.MatPreset.ui()",
            "image1": "hypershade.png",
            "imageOverlayLabel": "",
            "command": "import takTools.modeling.tak_matPreset as tak_matPreset\nimport imp\nimp.reload(tak_matPreset)\ntak_matPreset.MatPreset.ui()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "from takTools.common...c.setShapeColorRGB()",
            "annotation": "from takTools.common...c.setShapeColorRGB()",
            "image1": "colorPresetSpectrum.png",
            "imageOverlayLabel": "",
            "command": "from takTools.common import tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.setShapeColorRGB()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "import takTools.comm...misc.setJntColorUI()",
            "annotation": "import takTools.comm...misc.setJntColorUI()",
            "image1": "hairPaintSpecular.png",
            "imageOverlayLabel": "JC",
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.setJntColorUI()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "import takTools.comm...load(tc)\ntc.showUI()",
            "annotation": "Set ouliner color",
            "image1": "hairPaintSpecular.png",
            "imageOverlayLabel": "OC",
            "command": "import takTools.common.tak_outlinerColor as tc\nimport imp\nimp.reload(tc)\ntc.showUI()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "import takTools.comm...\ntak_misc.sortOutl()",
            "annotation": "Sorting selected items in outliner.",
            "image1": "sortName.png",
            "imageOverlayLabel": "",
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.sortOutl()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "from takRenamer impo...(main);main.showUI()",
            "annotation": "Renamer",
            "image1": "quickRename.png",
            "imageOverlayLabel": "",
            "command": "from takRenamer import main;import imp;imp.reload(main);main.showUI()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "import takTools.mode...ak_cleanUpModel.UI()",
            "annotation": "Delete construction history, unlock normal, unlock attr, delete intermediate shapes, freeze transform",
            "image1": "cleanUpMesh.bmp",
            "imageOverlayLabel": "",
            "command": "import takTools.modeling.tak_cleanUpModel as tak_cleanUpModel\nimport imp\nimp.reload(tak_cleanUpModel)\ntak_cleanUpModel.UI()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "from imp import relo...erGUI()\nsmGUI.show()",
            "annotation": "Set Manager",
            "image1": "objectSet.svg",
            "imageOverlayLabel": "SM",
            "command": "from imp import reload; import setManager as sm; reload(sm)\nsmGUI = sm.gui.ManagerGUI()\nsmGUI.show()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "from takTools.utils ...ptEditorHorizontal()",
            "annotation": "Layout script editor horizontally",
            "image1": "defaultTwoSideBySideLayout.png",
            "imageOverlayLabel": "SE",
            "command": "from takTools.utils import qtUtil;qtUtil.editScriptEditorHorizontal()",
            "sourceType": "python",
            "noDefaultPopup": true
        }
    ]
}