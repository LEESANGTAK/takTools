{
    "tabName": "Modeling", 
    "frameName": "Extra", 
    "order": "15", 
    "shelfButtonInfos": [
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "source \"C:/Users/Pub...oZBrushFromMaya.mel\"", 
            "command": "source \"C:/Users/Public/Pixologic/GoZApps/Maya/GoZBrushFromMaya.mel\"", 
            "image1": "GoZBrush.xpm", 
            "annotation": "Export selected object to ZBrush."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "uvlayout_open()...uvlayout_open()", 
            "command": "uvlayout_open()", 
            "image1": "uvlayout.png", 
            "annotation": "uvlayout_open()"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import subprocess\nsu...Bit)\\Photoshop.exe')", 
            "command": "import subprocess\nsubprocess.Popen('C:\\Program Files\\Adobe\\Adobe Photoshop CS6 (64 Bit)\\Photoshop.exe')", 
            "image1": "photoshop.bmp", 
            "annotation": "Run phothoshop."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "source DupAlongPathT...DupAlongPathToolbox;", 
            "command": "source DupAlongPathToolbox.mel;DupAlongPathToolbox;", 
            "image1": "DupAlongPathToolbox.png", 
            "annotation": "Duplicate object along the path"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "instanceAlongCurve...instanceAlongCurve", 
            "command": "instanceAlongCurve", 
            "image1": "menuIconEdit.png", 
            "annotation": "Instance Along Curve"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "spPaint3d...spPaint3d", 
            "command": "spPaint3d", 
            "image1": "spPaint3d.bmp", 
            "annotation": "Run spPaint3d."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "CVCurveTool...CVCurveTool", 
            "command": "CVCurveTool", 
            "image1": "curveCV.png", 
            "annotation": "Create a curve on the grid or live surface specifying control vertices"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "EPCurveTool...EPCurveTool", 
            "command": "EPCurveTool", 
            "image1": "curveEP.png", 
            "annotation": "Create a curve on the grid or live surface specifying edit points"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "RebuildCurveOptions...RebuildCurveOptions", 
            "command": "RebuildCurveOptions", 
            "image1": "rebuildCurve.png", 
            "annotation": "Rebuild curve options"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "meshName = pm.select..., n=meshName+\"_crv\")", 
            "command": "meshName = pm.selected()[0].node().getTransform();pm.polyToCurve(form=2, degree=3, n=meshName+\"_crv\")", 
            "image1": "polyEdgeToCurves.png", 
            "annotation": "Polygon Edges to Curve"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "if (! `pluginInfo -q...}\nwireMeshFromCurve;", 
            "command": "if (! `pluginInfo -q -loaded \"wire\"`)\n{\n    loadPlugin \"wire\";\n}\nwireMeshFromCurve;", 
            "image1": "shelf_wireMeshFromCurve.png", 
            "annotation": "if (! `pluginInfo -q...}\nwireMeshFromCurve;"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.mode...tak_curveToPoly.UI()", 
            "command": "import takTools.modeling.tak_curveToPoly as tak_curveToPoly\nimport imp\nimp.reload(tak_curveToPoly)\ntak_curveToPoly.UI()", 
            "image1": "curveToPoly.png", 
            "annotation": "Convert nurbs curves to polygon geomtry"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.comm...misc.crvToPolyStrp()", 
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.crvToPolyStrp()", 
            "image1": "crvToStripe.png", 
            "annotation": "Convert selected curves to polygon stripe."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.mode...phereizedSelection()", 
            "command": "import takTools.modeling.spherize as spherize\nspherize.sphereizedSelection()", 
            "image1": "spherizeSelection.png", 
            "annotation": "This script will attempt to Spherify the current selected objects or components."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "source _sort_circle_...;\n_sort_circle_tool;", 
            "command": "source _sort_circle_tool.mel;\n_sort_circle_tool;", 
            "image1": "alignCircle.bmp", 
            "annotation": "Align into circlular shape for selected edge loop."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "mopKnitOptions...mopKnitOptions", 
            "command": "mopKnitOptions", 
            "image1": "mopKnit.png", 
            "annotation": "Flatten geometry into uv space."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "doPerformLoft(\"1\", {...\",\"3\",\"1\",\"0\",\"1\"} )", 
            "command": "doPerformLoft(\"1\", {\"1\",\"1\",\"1\",\"0\",\"3\",\"1\",\"0\",\"1\"} )", 
            "image1": "skin.png", 
            "annotation": "Loft"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.mode...irTools.hairballUI()", 
            "command": "import takTools.modeling.hairTools as hairTools\nimport imp\nimp.reload(hairTools)\nhairTools.hairballUI()", 
            "image1": "hairTools.png", 
            "annotation": "Creating hair guide curves from polygon tube."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.mode....reload(waterDropUI)", 
            "command": "import takTools.modeling.waterDropUI as waterDropUI\nimport imp\nimp.reload(waterDropUI)", 
            "image1": "waterDropGenerator_shelfIcon.png", 
            "annotation": "Create water drop."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "icPolyScatter;...icPolyScatter;", 
            "command": "icPolyScatter;", 
            "image1": "icPolyScatter.png", 
            "annotation": "icPolyScatter;"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.mode...imp.reload(speedCut)", 
            "command": "import takTools.modeling.speedCut as speedCut\nimport imp\nimp.reload(speedCut)", 
            "image1": "pythonFamily.png", 
            "annotation": "Boolean hard surface modeling"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "source Voxel_Model_G...el_Generator_v4.mel;", 
            "command": "source Voxel_Model_Generator_v4.mel;", 
            "image1": "commandButton.png", 
            "annotation": "source Voxel_Model_G...el_Generator_v4.mel;"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "\nimport takXgenManag...nager()\nxgmg.show()\n", 
            "command": "\nimport takXgenManager.xgenManager as xgManager;import imp;imp.reload(xgManager)\n\nxgmg = xgManager.XGenManager()\nxgmg.show()\n", 
            "image1": "takXgenManager.png", 
            "annotation": "\nimport takXgenManag...nager()\nxgmg.show()\n"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "SetCutSewUVTool...SetCutSewUVTool", 
            "command": "SetCutSewUVTool", 
            "image1": "CutSewUVTool.png", 
            "annotation": "3D Cut and Sew UV Tool"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "textureWindowDisplay...playCheckered(1, 1);", 
            "command": "textureWindowDisplayCheckered(1, 1);", 
            "image1": "commandButton.png", 
            "annotation": "textureWindowDisplay...playCheckered(1, 1);"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "textureWindowDisplay...playCheckered(1, 0);", 
            "command": "textureWindowDisplayCheckered(1, 0);", 
            "image1": "commandButton.png", 
            "annotation": "textureWindowDisplay...playCheckered(1, 0);"
        }
    ]
}