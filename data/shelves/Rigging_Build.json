{
    "order": "22", 
    "tabName": "Rigging", 
    "frameName": "Build", 
    "collapse": false, 
    "shelfButtonInfos": [
        {
            "imageOverlayLabel": "RB", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "Rig Builder", 
            "command": "from imp import reload\nimport rigBuilder; reload(rigBuilder)\nrigBuilder.mainWindow.show()", 
            "image1": "HIKcreateControlRig.png", 
            "annotation": "Show rig builder GUI."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.rigg...MainUI()\narui.show()", 
            "command": "import takTools.rigging.autoRigging as ar\nimport imp\nimp.reload(ar)\n\ntry:\n    arui.close()\n    arui.deleteLater()\nexcept:\n    pass\n\narui = ar.ui.mainUI.MainUI()\narui.show()", 
            "image1": "takAutoRig.png", 
            "annotation": "Tak auto rigging"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "source \"AdvancedSkel...l\";AdvancedSkeleton;", 
            "command": "source \"AdvancedSkeleton.mel\";AdvancedSkeleton;", 
            "image1": "AS.png", 
            "annotation": "AdvancedSkeleton"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.rigg...I()\nashUIObj.show()\n", 
            "command": "import takTools.rigging.advancedSkeletonHelperUI as ashUI\nimport imp\nimp.reload(ashUI)\n\ntry:\n    ashUIObj.close()\nexcept:\n    pass\n\nashUIObj = ashUI.AdvancedSkeletonHelperUI()\nashUIObj.show()\n", 
            "image1": "AS.png", 
            "annotation": "import takTools.rigging.advancedSkeletonHelperUI as ashUI\nimport imp\nimp.reload(ashUI)\n\n..."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "source IH_buildSpIkC...IH_buildSpIkChain();", 
            "command": "source IH_buildSpIkChain.mel;\nIH_buildSpIkChain();", 
            "image1": "hairChain.bmp", 
            "annotation": "b1 hair dynamic tool"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.rigg...HBuildSpIkChain.ui()", 
            "command": "import takTools.rigging.tak_addFuncForIHBuildSpIkChain as tak_addFuncForIHBuildSpIkChain\nimport imp\nimp.reload(tak_addFuncForIHBuildSpIkChain)\ntak_addFuncForIHBuildSpIkChain.ui()", 
            "image1": "forHairChain.png", 
            "annotation": "Additional functions for the 'IH_buildSpIkChain.mel' script."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "source js_createStre...eateStretchSplineUI;", 
            "command": "source js_createStretchSplineUI;\njs_createStretchSplineUI;", 
            "image1": "scaleJoint.bmp", 
            "annotation": "js_createStretchSpline"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "source js_createIkSt...js_createIkStretchUI", 
            "command": "source js_createIkStretchUI;\njs_createIkStretchUI", 
            "image1": "ikStretch.bmp", 
            "annotation": "Stretchy Ik Creation"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.rigg...ultiConnectAttr.UI()", 
            "command": "import takTools.rigging.tak_multiConnectAttr as tak_multiConnectAttr\nimport imp\nimp.reload(tak_multiConnectAttr)\ntak_multiConnectAttr.UI()", 
            "image1": "multiConnections.png", 
            "annotation": "import takTools.rigg...ultiConnectAttr.UI()"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.rigg...t)\ntak_mulConst.UI()", 
            "command": "import takTools.rigging.tak_mulConst as tak_mulConst\nimport imp\nimp.reload(tak_mulConst)\ntak_mulConst.UI()", 
            "image1": "multiConstraint.bmp", 
            "annotation": "Constraint to multiple objects, first select driver then selcet other drivens"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.rigg...roup)\ntak_group.UI()", 
            "command": "import takTools.rigging.tak_group as tak_group\nimport imp\nimp.reload(tak_group)\ntak_group.UI()", 
            "image1": "group.bmp", 
            "annotation": "Make group"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.rigg...\ntak_createCtrl.UI()", 
            "command": "import takTools.rigging.tak_createCtrl as tak_createCtrl\nimport imp\nimp.reload(tak_createCtrl)\ntak_createCtrl.UI()", 
            "image1": "control.bmp", 
            "annotation": "Create control curves"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.comm...isc.mirCtrlShapeUi()", 
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.mirCtrlShapeUi()", 
            "image1": "mirSelCon.bmp", 
            "annotation": "Mirror controls"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.comm...tak_misc.mirConSel()", 
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.mirConSel()", 
            "image1": "mirConOneToOne.png", 
            "annotation": "Mirror control one to one."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "Mirror Object", 
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.mirObjUi()", 
            "image1": "mirrorObj.bmp", 
            "annotation": "Mirror selected objects"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.rigg...k_copyMirrorSDK.UI()", 
            "command": "import takTools.rigging.tak_copyMirrorSDK as tak_copyMirrorSDK\nimport imp\nimp.reload(tak_copyMirrorSDK)\ntak_copyMirrorSDK.UI()", 
            "image1": "tak_copySDK.bmp", 
            "annotation": "Copy or mirror set driven keyframes"
        }, 
        {
            "imageOverlayLabel": "SDK", 
            "noDefaultPopup": true, 
            "sourceType": "mel", 
            "label": "Set Driven key", 
            "command": "SetDrivenKey", 
            "image1": "menuIconKeys.png", 
            "annotation": "Set driven key options"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.rigg..._matchTransform.UI()", 
            "command": "import takTools.rigging.tak_matchTransform as tak_matchTransform\nimport imp\nimp.reload(tak_matchTransform)\ntak_matchTransform.UI()", 
            "image1": "matchTransform.bmp", 
            "annotation": "import takTools.rigg..._matchTransform.UI()"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.rigg...tak_attrManager.ui()", 
            "command": "import takTools.rigging.tak_attrManager as tak_attrManager\nimport imp\nimp.reload(tak_attrManager)\ntak_attrManager.ui()", 
            "image1": "attrManager.png", 
            "annotation": "import takTools.rigg...tak_attrManager.ui()"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.util...erValueToParent(sel)", 
            "command": "import takTools.utils.transform as tu\nimport imp\nimp.reload(tu)\n\nsels = pm.selected()\nfor sel in sels:\n    tu.transferValueToParent(sel)", 
            "image1": "zeroDepth.png", 
            "annotation": "Transfer selected transform channel values to the parent."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.rigg...pSpaceSwitching.ui()", 
            "command": "import takTools.rigging.tak_setupSpaceSwitching as tak_setupSpaceSwitching\nimport imp\nimp.reload(tak_setupSpaceSwitching)\ntak_setupSpaceSwitching.ui()", 
            "image1": "tak_setupSpaceSwitching.png", 
            "annotation": "Set up space switching."
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.rigg...t)\ntak_attachIt.UI()", 
            "command": "import takTools.rigging.tak_attachIt as tak_attachIt\nimport imp\nimp.reload(tak_attachIt)\ntak_attachIt.UI()", 
            "image1": "attachIt.png", 
            "annotation": "import takTools.rigg...t)\ntak_attachIt.UI()"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "from takPickwalkDesi...pdWindow.PDWindow()\n", 
            "command": "from takPickwalkDesigner import pdWindow\nimport imp\nimp.reload(pdWindow)\n\ntry:\n    pdWin.close()\nexcept:\n    pass\n\npdWin = pdWindow.PDWindow()\n", 
            "image1": "noPreview.png", 
            "annotation": "from takPickwalkDesi...pdWindow.PDWindow()\n"
        }, 
        {
            "imageOverlayLabel": "", 
            "noDefaultPopup": true, 
            "sourceType": "python", 
            "label": "import takTools.rigg...\ntak_cleanUpRig.ui()", 
            "command": "import takTools.rigging.tak_cleanUpRig as tak_cleanUpRig\nimport imp\nimp.reload(tak_cleanUpRig)\ntak_cleanUpRig.ui()", 
            "image1": "cleanUpRig.png", 
            "annotation": "import takTools.rigg...\ntak_cleanUpRig.ui()"
        }
    ]
}