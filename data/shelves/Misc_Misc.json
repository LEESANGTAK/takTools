{
    "order": "11",
    "tabName": "Misc",
    "frameName": "Misc",
    "collapse": false,
    "shelfButtonInfos": [
        {
            "label": "Cleanup Scene",
            "annotation": "Remove unknown nodes, plugins, callbacks, scriptjobs",
            "image1": "cleanupScene.png",
            "imageOverlayLabel": "",
            "command": "from takTools.utils import globalUtil;import imp;imp.reload(globalUtil); globalUtil.cleanupMayaScene()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Clear Output Window",
            "annotation": "Clear output window",
            "image1": "menuIconWindow.png",
            "imageOverlayLabel": "",
            "command": "from takTools.utils import system as sysUtil\nimport imp\nimp.reload(sysUtil)\n\nsysUtil.clearOutputWindow()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Icon Browser",
            "annotation": "Search maya resource images.",
            "image1": "imageDisplay.png",
            "imageOverlayLabel": "",
            "command": "import takTools.pipeline.takMayaResourceBrowser as tmrb\n\ntmrb.TakMayaResourceBrowser.showUI()\n",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Icon Maker",
            "annotation": "Create an icon image",
            "image1": "UVEditorSnapshot.png",
            "imageOverlayLabel": "",
            "command": "from takTools.common import iconMaker\nimport imp\nimp.reload(iconMaker)\n\ngui = iconMaker.IconMakerGUI()\ngui.show()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Save Scene Info",
            "annotation": "Save specific scene information as a file.",
            "image1": "save.png",
            "imageOverlayLabel": "info",
            "command": "import takTools.pipeline.tak_saveSceneInfo as tak_saveSceneInfo\nimport imp\nimp.reload(tak_saveSceneInfo)\ntak_saveSceneInfo.ui()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Project Folder Setup",
            "annotation": "Create folder structure.",
            "image1": "folder-new.png",
            "imageOverlayLabel": "project",
            "command": "import takTools.pipeline.tak_prjFolderSetup as tak_prjFolderSetup\nimport imp\nimp.reload(tak_prjFolderSetup)\ntak_prjFolderSetup.UI()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Reference Manager",
            "annotation": "Load or reload or delete references.",
            "image1": "reference.png",
            "imageOverlayLabel": "manager",
            "command": "import takTools.pipeline.tak_fileRef as tak_fileRef\nimport imp\nimp.reload(tak_fileRef)\ntak_fileRef.UI()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Rename Reference Node",
            "annotation": "Rename refrence node and namespace.",
            "image1": "reference.png",
            "imageOverlayLabel": "rename",
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.renameRefNode()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Line Width",
            "annotation": "Change line width.",
            "image1": "WireFrame.png",
            "imageOverlayLabel": "width",
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.lineWidth()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Shake Camera",
            "annotation": "Shake selected camera.",
            "image1": "Camera.png",
            "imageOverlayLabel": "Shake",
            "command": "import takTools.utils.camera as camUtils\nimport imp\nimp.reload(camUtils)\n\ncam = pm.selected()[0]\ncamUtils.shakeCamera(cam)\n",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Bake Camera",
            "annotation": "Bake selected camera",
            "image1": "Camera.png",
            "imageOverlayLabel": "bake",
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.bakeCam()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Bake Camera for AE",
            "annotation": "Bake selected camera to use in AE.",
            "image1": "Camera.png",
            "imageOverlayLabel": "AE",
            "command": "import takTools.pipeline.tak_mayaCamToAE as tak_mayaCamToAE\nimport imp\nimp.reload(tak_mayaCamToAE)\ntak_mayaCamToAE.ui()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Bake Camera for Max",
            "annotation": "Export selected camera for using in 3ds Max.",
            "image1": "Camera.png",
            "imageOverlayLabel": "Max",
            "command": "import takTools.pipeline.tak_mayaCamToMax as tak_mayaCamToMax\nimport imp\nimp.reload(tak_mayaCamToMax)\ntak_mayaCamToMax.mayaCamToMax()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Following Camera",
            "annotation": "Create camera following selected object.",
            "image1": "Camera.png",
            "imageOverlayLabel": "follow",
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.followingCam()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Track Locators",
            "annotation": "Create locators per frame with selected object.",
            "image1": "trackingLoc.png",
            "imageOverlayLabel": "",
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.trackingLoc()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Viewport Render",
            "annotation": "Render viewport.",
            "image1": "render.png",
            "imageOverlayLabel": "viewport",
            "command": "source ikas_renderViewBr",
            "sourceType": "mel",
            "noDefaultPopup": true
        },
        {
            "label": "Eye Mesh Specular",
            "annotation": "Attach specular sphere to selected vertex(s) or selected two edges.",
            "image1": "specSphere.png",
            "imageOverlayLabel": "",
            "command": "import takTools.common.tak_misc as tak_misc\nimport imp\nimp.reload(tak_misc)\ntak_misc.attachSpecSphere()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Batch Playblast",
            "annotation": "Batch playblast.",
            "image1": "playblast.png",
            "imageOverlayLabel": "batch",
            "command": "import takTools.pipeline.tak_batchPB as tak_batchPB\nimport imp\nimp.reload(tak_batchPB)\ntak_batchPB.batchPB()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Save Render Layer",
            "annotation": "Save and load render layer set up.",
            "image1": "render_renderLayer.png",
            "imageOverlayLabel": "save",
            "command": "import takTools.pipeline.tak_saveRenderLayer as tak_saveRenderLayer\nimport imp\nimp.reload(tak_saveRenderLayer)\nrenLyrSaveObj = tak_saveRenderLayer.SaveRenderLayer()\nrenLyrSaveObj.UI()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Edit Maya Ascii",
            "annotation": "Edit maya ascii file contents.",
            "image1": "SP_FileIcon.png",
            "imageOverlayLabel": "edit",
            "command": "import takTools.pipeline.tak_editMayaAsciiFile as tak_editMayaAsciiFile\nimport imp\nimp.reload(tak_editMayaAsciiFile)\ntak_editMayaAsciiFile.ui()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Cleanup FBX",
            "annotation": "Clean up a fbx file.",
            "image1": "fbxReview.png",
            "imageOverlayLabel": "",
            "command": "from imp import reload\nimport takFBXExporter as tfbxe; reload(tfbxe)\n\ntfbxe.gui.fbxCleanerUI.show()",
            "sourceType": "python",
            "noDefaultPopup": true
        },
        {
            "label": "Visual Function Curve",
            "annotation": "from takTools.utils import drawingFuncCurves as dfc\nimport imp\nimp.reload(dfc)\n...",
            "image1": "sineCurveProfile.png",
            "imageOverlayLabel": "f(x)",
            "command": "from takTools.utils import drawingFuncCurves as dfc\nimport imp\nimp.reload(dfc)\n\ndfc.showUI()",
            "sourceType": "python",
            "noDefaultPopup": true
        }
    ]
}